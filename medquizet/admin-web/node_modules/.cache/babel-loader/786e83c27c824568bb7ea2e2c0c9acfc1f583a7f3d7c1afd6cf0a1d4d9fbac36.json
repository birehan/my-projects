{"ast":null,"code":"var _jsxFileName = \"/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/features/units/components/UnitForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Stack, FormHelperText, Input, FormControl, Typography } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { createUnit, updateUnit } from \"../actions/units.js\";\nimport HelperText from \"../../../components/HelperText.js\";\nimport { useSelector } from \"react-redux\";\nimport { cleanUp } from \"../actions/units.js\";\nimport ToastAlert from \"../../../components/ToastAlert.js\";\nimport { makeStyles } from \"@mui/styles\";\nimport SpinnerComponent from \"../../../components/Spinner.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  submitButton: {\n    width: \"100%\",\n    background: \"#0EAFAF !important\",\n    color: \"white !important\",\n    fontWeight: \"bold  !important\",\n    margin: \"20px auto 20px  !important\",\n    fontSize: \"1.05rem  !important\",\n    \"&:hover\": {\n      background: \"#078989  !important\",\n      transition: \"400ms all easy-in\"\n    },\n    display: \"flex\",\n    padding: \"8px 20px !important\"\n  }\n}));\nconst UnitForm = _ref => {\n  _s();\n  let {\n    courseId,\n    unit\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openToast, setOpenToast] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const {\n    message,\n    success,\n    isCreate,\n    isUpdate,\n    loading\n  } = useSelector(state => state.units);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: unit ? unit === null || unit === void 0 ? void 0 : unit.title : \"\"\n    }\n  });\n  const onSubmit = data => {\n    const newUnit = {\n      courseId: courseId,\n      title: data.title\n    };\n    if (unit) {\n      dispatch(updateUnit({\n        ...newUnit,\n        id: unit.id\n      }));\n    } else {\n      dispatch(createUnit(newUnit));\n    }\n  };\n  useEffect(() => {\n    if (success && isCreate) {\n      setAlertMessage(\"Unit create successfully\");\n      setOpenToast(true);\n    }\n    if (success && isUpdate) {\n      setAlertMessage(\"Unit update successfully\");\n      setOpenToast(true);\n    }\n    dispatch(cleanUp());\n  }, [isCreate, isUpdate, success, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [openToast && /*#__PURE__*/_jsxDEV(ToastAlert, {\n      openToast: openToast,\n      setOpenToast: setOpenToast,\n      message: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: \"red\",\n        textAlign: \"center\",\n        mt: \"10px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        gap: \"20px\",\n        margin: \"20px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(HelperText, {\n          text: \"Unit title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            disableUnderline: true,\n            type: \"text\",\n            sx: {\n              m: \"15px 0 !important\",\n              background: \"rgba(176, 186, 195, 0.19) !important\",\n              padding: \"10px 16px !important\",\n              borderRadius: \"5px\"\n            },\n            placeholder: \"Unit\",\n            name: \"title\",\n            ...register(\"title\", {\n              required: \"Unit title is required\"\n            }),\n            id: \"outlined-basic unit title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), !!errors.title && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            sx: {\n              mt: \"-10px\"\n            },\n            error: true,\n            id: \"username-error\",\n            children: errors.title && errors.title.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.submitButton,\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(UnitForm, \"UO8MqkOLImjKB4M/h6LlYpuF4zw=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useForm];\n});\n_c = UnitForm;\nexport default UnitForm;\nvar _c;\n$RefreshReg$(_c, \"UnitForm\");","map":{"version":3,"names":["React","useEffect","useState","Button","Stack","FormHelperText","Input","FormControl","Typography","useForm","useDispatch","createUnit","updateUnit","HelperText","useSelector","cleanUp","ToastAlert","makeStyles","SpinnerComponent","useStyles","theme","submitButton","width","background","color","fontWeight","margin","fontSize","transition","display","padding","UnitForm","courseId","unit","classes","dispatch","openToast","setOpenToast","alertMessage","setAlertMessage","message","success","isCreate","isUpdate","loading","state","units","register","handleSubmit","formState","errors","defaultValues","title","onSubmit","data","newUnit","id","textAlign","mt","gap","m","borderRadius","required"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/features/units/components/UnitForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Stack,\n  FormHelperText,\n  Input,\n  FormControl,\n  Typography,\n} from \"@mui/material\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { createUnit, updateUnit } from \"../actions/units.js\";\nimport HelperText from \"../../../components/HelperText.js\";\nimport { useSelector } from \"react-redux\";\nimport { cleanUp } from \"../actions/units.js\";\nimport ToastAlert from \"../../../components/ToastAlert.js\";\nimport { makeStyles } from \"@mui/styles\";\nimport SpinnerComponent from \"../../../components/Spinner.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  submitButton: {\n    width: \"100%\",\n    background: \"#0EAFAF !important\",\n\n    color: \"white !important\",\n    fontWeight: \"bold  !important\",\n    margin: \"20px auto 20px  !important\",\n    fontSize: \"1.05rem  !important\",\n    \"&:hover\": {\n      background: \"#078989  !important\",\n      transition: \"400ms all easy-in\",\n    },\n    display: \"flex\",\n    padding: \"8px 20px !important\",\n  },\n}));\n\nconst UnitForm = ({ courseId, unit }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [openToast, setOpenToast] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  const { message, success, isCreate, isUpdate, loading } = useSelector(\n    (state) => state.units\n  );\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      title: unit ? unit?.title : \"\",\n    },\n  });\n\n  const onSubmit = (data) => {\n    const newUnit = {\n      courseId: courseId,\n      title: data.title,\n    };\n    if (unit) {\n      dispatch(updateUnit({ ...newUnit, id: unit.id }));\n    } else {\n      dispatch(createUnit(newUnit));\n    }\n  };\n\n  useEffect(() => {\n    if (success && isCreate) {\n      setAlertMessage(\"Unit create successfully\");\n      setOpenToast(true);\n    }\n    if (success && isUpdate) {\n      setAlertMessage(\"Unit update successfully\");\n      setOpenToast(true);\n    }\n    dispatch(cleanUp());\n  }, [isCreate, isUpdate, success, dispatch]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {openToast && (\n        <ToastAlert\n          openToast={openToast}\n          setOpenToast={setOpenToast}\n          message={alertMessage}\n        />\n      )}\n\n      {message && (\n        <Typography\n          sx={{\n            color: \"red\",\n            textAlign: \"center\",\n            mt: \"10px\",\n          }}\n        >\n          {message}\n        </Typography>\n      )}\n\n      {loading && <SpinnerComponent />}\n      <Stack sx={{ gap: \"20px\", margin: \"20px 0\" }}>\n        <Stack>\n          <HelperText text=\"Unit title\" />\n          <FormControl variant=\"outlined\" fullWidth>\n            <Input\n              disableUnderline\n              type={\"text\"}\n              sx={{\n                m: \"15px 0 !important\",\n                background: \"rgba(176, 186, 195, 0.19) !important\",\n                padding: \"10px 16px !important\",\n                borderRadius: \"5px\",\n              }}\n              placeholder=\"Unit\"\n              name=\"title\"\n              {...register(\"title\", {\n                required: \"Unit title is required\",\n              })}\n              id=\"outlined-basic unit title\"\n            />\n            {!!errors.title && (\n              <FormHelperText sx={{ mt: \"-10px\" }} error id=\"username-error\">\n                {errors.title && errors.title.message}\n              </FormHelperText>\n            )}\n          </FormControl>\n        </Stack>\n      </Stack>\n\n      <Button className={classes.submitButton} type=\"submit\">\n        Save\n      </Button>\n    </form>\n  );\n};\n\nexport default UnitForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
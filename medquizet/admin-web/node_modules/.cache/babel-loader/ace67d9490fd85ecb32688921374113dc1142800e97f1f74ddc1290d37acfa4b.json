{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/unitActionTypes.js\";\nimport * as api from \"../features/units/api/index.js\";\nfunction createUnit(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const unit = yield call(api.createUnit, payload);\n      yield put({\n        type: types.CREATE_UNIT_SUCCESS,\n        payload: unit\n      });\n    } catch (error) {\n      yield put({\n        type: types.CREATE_UNIT_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* getAllUnits() {\n  try {\n    const units = yield call(api.getAllUnits);\n    yield put({\n      type: types.GET_ALL_UNITS_SUCCESS,\n      payload: units\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_ALL_UNITS_FAILED,\n      payload: error\n    });\n  }\n}\nfunction updateUnit(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    try {\n      const unit = yield call(api.updateUnit, payload);\n      yield put({\n        type: types.UPDATE_UNIT_SUCCESS,\n        payload: unit\n      });\n    } catch (error) {\n      yield put({\n        type: types.UPDATE_UNIT_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction deleteUnit(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    try {\n      const unit = yield call(api.deleteUnit, payload);\n      yield put({\n        type: types.DELETE_UNIT_SUCCESS,\n        payload: unit\n      });\n    } catch (error) {\n      yield put({\n        type: types.DELETE_UNIT_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* unitSaga() {\n  yield takeEvery(types.GET_ALL_UNITS, getAllUnits);\n  yield takeEvery(types.CREATE_UNIT, createUnit);\n  yield takeEvery(types.UPDATE_UNIT, updateUnit);\n  yield takeEvery(types.DELETE_UNIT, deleteUnit);\n}\nexport default unitSaga;","map":{"version":3,"names":["call","put","takeEvery","types","api","createUnit","payload","unit","type","CREATE_UNIT_SUCCESS","error","CREATE_UNIT_FAILED","getAllUnits","units","GET_ALL_UNITS_SUCCESS","GET_ALL_UNITS_FAILED","updateUnit","UPDATE_UNIT_SUCCESS","UPDATE_UNIT_FAILED","deleteUnit","DELETE_UNIT_SUCCESS","DELETE_UNIT_FAILED","unitSaga","GET_ALL_UNITS","CREATE_UNIT","UPDATE_UNIT","DELETE_UNIT"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/sagas/unitSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/unitActionTypes.js\";\nimport * as api from \"../features/units/api/index.js\";\n\nfunction* createUnit({ payload }) {\n  try {\n    const unit = yield call(api.createUnit, payload);\n    yield put({ type: types.CREATE_UNIT_SUCCESS, payload: unit });\n  } catch (error) {\n    yield put({\n      type: types.CREATE_UNIT_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* getAllUnits() {\n  try {\n    const units = yield call(api.getAllUnits);\n    yield put({ type: types.GET_ALL_UNITS_SUCCESS, payload: units });\n  } catch (error) {\n    yield put({\n      type: types.GET_ALL_UNITS_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* updateUnit({ payload }) {\n  try {\n    const unit = yield call(api.updateUnit, payload);\n    yield put({ type: types.UPDATE_UNIT_SUCCESS, payload: unit });\n  } catch (error) {\n    yield put({ type: types.UPDATE_UNIT_FAILED, payload: error });\n  }\n}\n\nfunction* deleteUnit({ payload }) {\n  try {\n    const unit = yield call(api.deleteUnit, payload);\n    yield put({ type: types.DELETE_UNIT_SUCCESS, payload: unit });\n  } catch (error) {\n    yield put({ type: types.DELETE_UNIT_FAILED, payload: error });\n  }\n}\n\nfunction* unitSaga() {\n  yield takeEvery(types.GET_ALL_UNITS, getAllUnits);\n  yield takeEvery(types.CREATE_UNIT, createUnit);\n  yield takeEvery(types.UPDATE_UNIT, updateUnit);\n  yield takeEvery(types.DELETE_UNIT, deleteUnit);\n}\n\nexport default unitSaga;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,OAAO,KAAKC,KAAK,MAAM,iCAAiC;AACxD,OAAO,KAAKC,GAAG,MAAM,gCAAgC;AAErD,SAAUC,UAAU;EAAA,IAAC;IAAEC;EAAQ,CAAC;EAAA,oBAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACC,UAAU,EAAEC,OAAO,CAAC;MAChD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACM,mBAAmB;QAAEH,OAAO,EAAEC;MAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QACRO,IAAI,EAAEL,KAAK,CAACQ,kBAAkB;QAC9BL,OAAO,EAAEI;MACX,CAAC,CAAC;IACJ;EACF,CAAC;AAAA;AAED,UAAUE,WAAW,GAAG;EACtB,IAAI;IACF,MAAMC,KAAK,GAAG,MAAMb,IAAI,CAACI,GAAG,CAACQ,WAAW,CAAC;IACzC,MAAMX,GAAG,CAAC;MAAEO,IAAI,EAAEL,KAAK,CAACW,qBAAqB;MAAER,OAAO,EAAEO;IAAM,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MACRO,IAAI,EAAEL,KAAK,CAACY,oBAAoB;MAChCT,OAAO,EAAEI;IACX,CAAC,CAAC;EACJ;AACF;AAEA,SAAUM,UAAU;EAAA,IAAC;IAAEV;EAAQ,CAAC;EAAA,oBAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACY,UAAU,EAAEV,OAAO,CAAC;MAChD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACc,mBAAmB;QAAEX,OAAO,EAAEC;MAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACe,kBAAkB;QAAEZ,OAAO,EAAEI;MAAM,CAAC,CAAC;IAC/D;EACF,CAAC;AAAA;AAED,SAAUS,UAAU;EAAA,IAAC;IAAEb;EAAQ,CAAC;EAAA,oBAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACe,UAAU,EAAEb,OAAO,CAAC;MAChD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACiB,mBAAmB;QAAEd,OAAO,EAAEC;MAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACkB,kBAAkB;QAAEf,OAAO,EAAEI;MAAM,CAAC,CAAC;IAC/D;EACF,CAAC;AAAA;AAED,UAAUY,QAAQ,GAAG;EACnB,MAAMpB,SAAS,CAACC,KAAK,CAACoB,aAAa,EAAEX,WAAW,CAAC;EACjD,MAAMV,SAAS,CAACC,KAAK,CAACqB,WAAW,EAAEnB,UAAU,CAAC;EAC9C,MAAMH,SAAS,CAACC,KAAK,CAACsB,WAAW,EAAET,UAAU,CAAC;EAC9C,MAAMd,SAAS,CAACC,KAAK,CAACuB,WAAW,EAAEP,UAAU,CAAC;AAChD;AAEA,eAAeG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
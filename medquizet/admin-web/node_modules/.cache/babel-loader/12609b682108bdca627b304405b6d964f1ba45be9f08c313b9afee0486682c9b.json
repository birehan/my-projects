{"ast":null,"code":"import * as types from \"../constants/unitActionTypes.js\";\nconst initialState = {\n  units: null,\n  loading: false,\n  success: false,\n  failed: false,\n  message: \"\",\n  isCreate: false,\n  isUpdate: false,\n  isDelete: false\n};\nconst unitReducer = function () {\n  var _state$units;\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // get courses\n    case types.GET_ALL_UNITS:\n      return {\n        ...state\n      };\n    case types.GET_ALL_UNITS_SUCCESS:\n      return {\n        ...state,\n        units: action.payload,\n        loading: false,\n        success: true\n      };\n    case types.GET_ALL_UNITS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString()\n      };\n\n    // create course\n    case types.CREATE_UNIT:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.CREATE_UNIT_SUCCESS:\n      return {\n        ...state,\n        units: [action.payload, ...state.units],\n        loading: false,\n        success: true,\n        isCreate: true,\n        message: \"\"\n      };\n    case types.CREATE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString()\n      };\n\n    // update course\n    case types.UPDATE_UNIT:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.UPDATE_UNIT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        units: [action.payload, ...state.units.filter(unit => {\n          var _action$payload;\n          return (unit === null || unit === void 0 ? void 0 : unit.id) !== ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.id);\n        })],\n        success: true,\n        isUpdate: true,\n        message: \"\"\n      };\n    case types.UPDATE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString()\n      };\n\n    // delete course\n    case types.DELETE_UNIT:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.DELETE_UNIT_SUCCESS:\n      return {\n        ...state,\n        units: state === null || state === void 0 ? void 0 : (_state$units = state.units) === null || _state$units === void 0 ? void 0 : _state$units.filter(unit => {\n          var _action$payload2;\n          return (unit === null || unit === void 0 ? void 0 : unit.id) !== (action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.id);\n        }),\n        loading: false,\n        success: true,\n        isDelete: true,\n        message: \"\"\n      };\n    case types.DELETE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString()\n      };\n    case types.CLEAN_UP:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: \"\",\n        isCreate: false,\n        isUpdate: false,\n        isDelete: false\n      };\n\n    // get courses\n\n    default:\n      return state;\n  }\n};\nexport default unitReducer;","map":{"version":3,"names":["types","initialState","units","loading","success","failed","message","isCreate","isUpdate","isDelete","unitReducer","state","action","type","GET_ALL_UNITS","GET_ALL_UNITS_SUCCESS","payload","GET_ALL_UNITS_FAILED","toString","CREATE_UNIT","CREATE_UNIT_SUCCESS","CREATE_UNIT_FAILED","UPDATE_UNIT","UPDATE_UNIT_SUCCESS","filter","unit","id","UPDATE_UNIT_FAILED","DELETE_UNIT","DELETE_UNIT_SUCCESS","DELETE_UNIT_FAILED","CLEAN_UP"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/redux/unitReducer.js"],"sourcesContent":["import * as types from \"../constants/unitActionTypes.js\";\nconst initialState = {\n  units: null,\n  loading: false,\n  success: false,\n  failed: false,\n  message: \"\",\n  isCreate: false,\n  isUpdate: false,\n  isDelete: false,\n};\n\nconst unitReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // get courses\n    case types.GET_ALL_UNITS:\n      return {\n        ...state,\n      };\n    case types.GET_ALL_UNITS_SUCCESS:\n      return {\n        ...state,\n        units: action.payload,\n        loading: false,\n        success: true,\n      };\n    case types.GET_ALL_UNITS_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString(),\n      };\n\n    // create course\n    case types.CREATE_UNIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.CREATE_UNIT_SUCCESS:\n      return {\n        ...state,\n        units: [action.payload, ...state.units],\n        loading: false,\n        success: true,\n        isCreate: true,\n        message: \"\",\n      };\n    case types.CREATE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString(),\n      };\n\n    // update course\n    case types.UPDATE_UNIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.UPDATE_UNIT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        units: [\n          action.payload,\n          ...state.units.filter((unit) => unit?.id !== action.payload?.id),\n        ],\n\n        success: true,\n        isUpdate: true,\n        message: \"\",\n      };\n    case types.UPDATE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString(),\n      };\n\n    // delete course\n    case types.DELETE_UNIT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.DELETE_UNIT_SUCCESS:\n      return {\n        ...state,\n        units: state?.units?.filter((unit) => unit?.id !== action?.payload?.id),\n        loading: false,\n        success: true,\n        isDelete: true,\n        message: \"\",\n      };\n    case types.DELETE_UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: action.payload.toString(),\n      };\n\n    case types.CLEAN_UP:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        message: \"\",\n        isCreate: false,\n        isUpdate: false,\n        isDelete: false,\n      };\n\n    // get courses\n\n    default:\n      return state;\n  }\n};\n\nexport default unitReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
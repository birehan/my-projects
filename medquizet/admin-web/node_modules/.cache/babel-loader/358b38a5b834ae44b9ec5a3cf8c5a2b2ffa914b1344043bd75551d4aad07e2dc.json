{"ast":null,"code":"import _objectSpread from\"/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import HelperText from\"../../../../components/HelperText.js\";import{Button,Stack,Box,Typography,Input,FormHelperText}from\"@mui/material\";import FormControl from\"@mui/material/FormControl\";import QuestionChoice from\"./ChoiceForm.js\";import{useFieldArray}from\"react-hook-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuestionForm=function QuestionForm(_ref){var _errors$questions$sel,_errors$questions$sel2,_errors$questions$sel3,_errors$questions$sel4,_errors$questions$sel5,_errors$questions$sel6;var control=_ref.control,register=_ref.register,errors=_ref.errors,selectedQuestion=_ref.selectedQuestion,setSelectedQuestion=_ref.setSelectedQuestion,questionLength=_ref.questionLength,question=_ref.question,getValues=_ref.getValues,setValue=_ref.setValue,watch=_ref.watch,trigger=_ref.trigger,removeQuestion=_ref.remove;// const [answer, setAnswer] = useState(null);\n// const [choices, setChoices] = useState([{ id: 0, value: \"\" }]);\n// useEffect(() => {\n// }, [selectedQuestion]);\nvar _useFieldArray=useFieldArray({control:control,name:\"questions[\".concat(selectedQuestion,\"].choices\")}),fields=_useFieldArray.fields,remove=_useFieldArray.remove,append=_useFieldArray.append;// console.log(question, fields);\nreturn/*#__PURE__*/_jsx(Stack,{sx:{flex:1,background:\"white\"},children:/*#__PURE__*/_jsxs(Stack,{sx:{gap:\"15px\"},children:[/*#__PURE__*/_jsx(Box,{sx:{background:\"#039198\",padding:\"20px\",textAlign:\"center\"},children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{fontWeight:\"bold\",color:\"white\"},children:\"Question Form\"})}),/*#__PURE__*/_jsxs(Stack,{sx:{flexDirection:\"column\",gap:\"15px\",padding:\"40px\"},children:[/*#__PURE__*/_jsxs(Typography,{children:[\"Question \",selectedQuestion+1]}),/*#__PURE__*/_jsxs(FormControl,{variant:\"standard\",children:[/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({disableUnderline:true//   sx={{ width: \"100px\" }}\n,placeholder:\"Add Question\",type:\"text\"},register(\"questions.\".concat(selectedQuestion,\".title\"),{required:\"title is required\"})),{},{// value={getValues(`questions.${selectedQuestion}.title`)}\n// name={`questions[${selectedQuestion}].title`}\n// ref={register()}\n// defaultValue={question?.title}\nvariant:\"outlined\",id:\"outlined-basic title\",sx:{background:\"#f6f9fa\",padding:\"8px 16px\",borderRadius:\"5px\"}})),errors.questions&&errors.questions[selectedQuestion]?!!(errors!==null&&errors!==void 0&&(_errors$questions$sel=errors.questions[selectedQuestion])!==null&&_errors$questions$sel!==void 0&&_errors$questions$sel.title)&&/*#__PURE__*/_jsx(FormHelperText,{error:true,id:\"title-error\",children:(errors===null||errors===void 0?void 0:(_errors$questions$sel2=errors.questions[selectedQuestion])===null||_errors$questions$sel2===void 0?void 0:_errors$questions$sel2.title)&&(errors===null||errors===void 0?void 0:(_errors$questions$sel3=errors.questions[selectedQuestion])===null||_errors$questions$sel3===void 0?void 0:_errors$questions$sel3.title.message)}):\"\"]}),/*#__PURE__*/_jsx(Stack,{sx:{gap:\"15px\"},children:fields.map(function(choice,index){return/*#__PURE__*/_jsx(QuestionChoice,{choice:choice,index:index,remove:remove,append:append,selectedQuestion:selectedQuestion,register:register,errors:errors,getValues:getValues,setValue:setValue,watch:watch,question:question,trigger:trigger,control:control},choice===null||choice===void 0?void 0:choice.id);})}),/*#__PURE__*/_jsxs(Stack,{sx:{gap:\"20px\"},children:[/*#__PURE__*/_jsx(HelperText,{text:\"Explanation\"}),/*#__PURE__*/_jsxs(FormControl,{variant:\"standard\",children:[/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({multiline:true// maxRows={6}\n,minRows:6,disableUnderline:true//   sx={{ width: \"100px\" }}\n,placeholder:\"Explanation\",type:\"text\"},register(\"questions.\".concat(selectedQuestion,\".explanation\"),{required:\"explanation is required\"})),{},{variant:\"outlined\",id:\"outlined-basic description\",sx:{background:\"#f6f9fa\",padding:\"10px 15px\",borderRadius:\"5px\",alignItems:\"flex-start\"}})),errors.questions&&errors.questions[selectedQuestion]?!!(errors!==null&&errors!==void 0&&(_errors$questions$sel4=errors.questions[selectedQuestion])!==null&&_errors$questions$sel4!==void 0&&_errors$questions$sel4.explanation)&&/*#__PURE__*/_jsx(FormHelperText,{error:true,id:\"explanation-error\",children:(errors===null||errors===void 0?void 0:(_errors$questions$sel5=errors.questions[selectedQuestion])===null||_errors$questions$sel5===void 0?void 0:_errors$questions$sel5.explanation)&&(errors===null||errors===void 0?void 0:(_errors$questions$sel6=errors.questions[selectedQuestion])===null||_errors$questions$sel6===void 0?void 0:_errors$questions$sel6.explanation.message)}):\"\"]})]})]}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"20px\"},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(questionLength>1){removeQuestion(selectedQuestion);if(selectedQuestion!==0){setSelectedQuestion(selectedQuestion-1);}}},sx:{background:\"#f6f9fa\",color:\"#078989\",fontWeight:\"bold\",margin:\"30px auto\",\"&:hover\":{background:\"#f6f9fa\",transition:\"400ms all easy-in\"},display:\"flex\",padding:\"8px 20px !important\",border:\"1px solid silver\"},children:\"Remove\"})})]})});};export default QuestionForm;","map":{"version":3,"names":["React","HelperText","Button","Stack","Box","Typography","Input","FormHelperText","FormControl","QuestionChoice","useFieldArray","QuestionForm","control","register","errors","selectedQuestion","setSelectedQuestion","questionLength","question","getValues","setValue","watch","trigger","removeQuestion","remove","name","fields","append","flex","background","gap","padding","textAlign","fontWeight","color","flexDirection","required","borderRadius","questions","title","message","map","choice","index","id","alignItems","explanation","display","justifyContent","margin","transition","border"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/features/questionsets/components/forms/QuestionForm.js"],"sourcesContent":["import React from \"react\";\n\nimport HelperText from \"../../../../components/HelperText.js\";\nimport {\n  Button,\n  Stack,\n  Box,\n  Typography,\n  Input,\n  FormHelperText,\n} from \"@mui/material\";\nimport FormControl from \"@mui/material/FormControl\";\n\nimport QuestionChoice from \"./ChoiceForm.js\";\nimport { useFieldArray } from \"react-hook-form\";\n\nconst QuestionForm = ({\n  control,\n  register,\n  errors,\n  selectedQuestion,\n  setSelectedQuestion,\n  questionLength,\n  question,\n  getValues,\n  setValue,\n  watch,\n  trigger,\n  remove: removeQuestion,\n}) => {\n  // const [answer, setAnswer] = useState(null);\n  // const [choices, setChoices] = useState([{ id: 0, value: \"\" }]);\n\n  // useEffect(() => {\n  // }, [selectedQuestion]);\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `questions[${selectedQuestion}].choices`,\n  });\n  // console.log(question, fields);\n\n  return (\n    <Stack\n      sx={{\n        flex: 1,\n        background: \"white\",\n      }}\n    >\n      <Stack sx={{ gap: \"15px\" }}>\n        <Box\n          sx={{ background: \"#039198\", padding: \"20px\", textAlign: \"center\" }}\n        >\n          <Typography variant=\"h5\" sx={{ fontWeight: \"bold\", color: \"white\" }}>\n            Question Form\n          </Typography>\n        </Box>\n        <Stack sx={{ flexDirection: \"column\", gap: \"15px\", padding: \"40px\" }}>\n          <Typography>Question {selectedQuestion + 1}</Typography>\n          <FormControl variant=\"standard\">\n            <Input\n              disableUnderline\n              //   sx={{ width: \"100px\" }}\n              placeholder=\"Add Question\"\n              type=\"text\"\n              {...register(`questions.${selectedQuestion}.title`, {\n                required: \"title is required\",\n              })}\n              // value={getValues(`questions.${selectedQuestion}.title`)}\n              // name={`questions[${selectedQuestion}].title`}\n              // ref={register()}\n              // defaultValue={question?.title}\n              variant=\"outlined\"\n              id=\"outlined-basic title\"\n              sx={{\n                background: \"#f6f9fa\",\n                padding: \"8px 16px\",\n                borderRadius: \"5px\",\n              }}\n            />\n            {errors.questions && errors.questions[selectedQuestion]\n              ? !!errors?.questions[selectedQuestion]?.title && (\n                  <FormHelperText error id=\"title-error\">\n                    {errors?.questions[selectedQuestion]?.title &&\n                      errors?.questions[selectedQuestion]?.title.message}\n                  </FormHelperText>\n                )\n              : \"\"}\n          </FormControl>\n          <Stack sx={{ gap: \"15px\" }}>\n            {fields.map((choice, index) => {\n              return (\n                <QuestionChoice\n                  key={choice?.id}\n                  choice={choice}\n                  index={index}\n                  remove={remove}\n                  append={append}\n                  selectedQuestion={selectedQuestion}\n                  register={register}\n                  errors={errors}\n                  getValues={getValues}\n                  setValue={setValue}\n                  watch={watch}\n                  question={question}\n                  trigger={trigger}\n                  control={control}\n                />\n              );\n            })}\n          </Stack>\n          <Stack sx={{ gap: \"20px\" }}>\n            <HelperText text=\"Explanation\" />\n            <FormControl variant=\"standard\">\n              <Input\n                multiline\n                // maxRows={6}\n                minRows={6}\n                disableUnderline\n                //   sx={{ width: \"100px\" }}\n                placeholder=\"Explanation\"\n                type=\"text\"\n                {...register(`questions.${selectedQuestion}.explanation`, {\n                  required: \"explanation is required\",\n                })}\n                variant=\"outlined\"\n                id=\"outlined-basic description\"\n                sx={{\n                  background: \"#f6f9fa\",\n                  padding: \"10px 15px\",\n                  borderRadius: \"5px\",\n                  alignItems: \"flex-start\",\n                }}\n              />\n              {errors.questions && errors.questions[selectedQuestion]\n                ? !!errors?.questions[selectedQuestion]?.explanation && (\n                    <FormHelperText error id=\"explanation-error\">\n                      {errors?.questions[selectedQuestion]?.explanation &&\n                        errors?.questions[selectedQuestion]?.explanation\n                          .message}\n                    </FormHelperText>\n                  )\n                : \"\"}\n            </FormControl>\n          </Stack>\n        </Stack>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              if (questionLength > 1) {\n                removeQuestion(selectedQuestion);\n                if (selectedQuestion !== 0) {\n                  setSelectedQuestion(selectedQuestion - 1);\n                }\n              }\n            }}\n            sx={{\n              background: \"#f6f9fa\",\n\n              color: \"#078989\",\n              fontWeight: \"bold\",\n              margin: \"30px auto\",\n              \"&:hover\": {\n                background: \"#f6f9fa\",\n\n                transition: \"400ms all easy-in\",\n              },\n              display: \"flex\",\n              padding: \"8px 20px !important\",\n              border: \"1px solid silver\",\n            }}\n          >\n            Remove\n          </Button>\n        </Box>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
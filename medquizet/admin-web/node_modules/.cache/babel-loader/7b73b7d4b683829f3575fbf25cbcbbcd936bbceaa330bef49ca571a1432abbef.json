{"ast":null,"code":"import _objectSpread from\"/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{Button,Stack,Input}from\"@mui/material\";import FormControl from\"@mui/material/FormControl\";import AddIcon from\"@mui/icons-material/Add\";import RemoveIcon from\"@mui/icons-material/Remove\";import DoneIcon from\"@mui/icons-material/Done\";import{useController}from\"react-hook-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuestionChoice=function QuestionChoice(_ref){var choice=_ref.choice,index=_ref.index,remove=_ref.remove,append=_ref.append,selectedQuestion=_ref.selectedQuestion,register=_ref.register,getValues=_ref.getValues,watch=_ref.watch,control=_ref.control;var questionFieldName=\"questions[\".concat(selectedQuestion,\"]\");var _useController=useController({name:\"\".concat(questionFieldName,\".answer\"),control:control,defaultValue:\"\"}),answerField=_useController.field;var _useController2=useController({name:\"\".concat(questionFieldName,\".choices[\").concat(index,\"].id\"),control:control,defaultValue:\"\"}),choiceIdField=_useController2.field;var handleChoiceSelect=function handleChoiceSelect(selectedQuestion,index,choiceId){answerField.onChange(choiceId);choiceIdField.onChange(choiceId);};return/*#__PURE__*/_jsxs(Stack,{sx:{gap:\"20px\"},children:[/*#__PURE__*/_jsxs(Stack,{sx:{flexDirection:\"row\",gap:\"10px\",width:\"100% !important\"},children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(getValues(\"questions.\".concat(selectedQuestion,\".choices.length\"))>1){if(watch(\"questions.\".concat(selectedQuestion,\".answer\"))===watch(\"questions.\".concat(selectedQuestion,\".choices.\").concat(index,\".id\"))){answerField.onChange(\"\");}remove(index);}},sx:{width:\"20px\",background:\"#f6f9fa\",color:\"black\"},children:/*#__PURE__*/_jsx(RemoveIcon,{})}),/*#__PURE__*/_jsx(FormControl,{sx:{width:\"100%\"},variant:\"standard\",children:/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({disableUnderline:true,fullWidth:true,type:\"text\"},register(\"questions[\".concat(selectedQuestion,\"].choices[\").concat(index,\"].value\"),{required:\"question choice is required\"})),{},{variant:\"outlined\",id:\"outlined-basic title\",sx:{background:\"#f6f9fa\",padding:\"8px 16px\",borderRadius:\"5px\"}}))}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleChoiceSelect(selectedQuestion,index,choice.id);},sx:{width:\"20px\",background:watch(\"questions.\".concat(selectedQuestion,\".answer\"))===watch(\"questions.\".concat(selectedQuestion,\".choices.\").concat(index,\".id\"))?\"#078989\":\"#f6f9fa\",color:watch(\"questions.\".concat(selectedQuestion,\".answer\"))===watch(\"questions.\".concat(selectedQuestion,\".choices.\").concat(index,\".id\"))?\"white\":\"black\",\"&:hover\":{background:watch(\"questions.\".concat(selectedQuestion,\".answer\"))===watch(\"questions.\".concat(selectedQuestion,\".choices.\").concat(index,\".id\"))?\"#078989\":\"#f6f9fa\"}},children:/*#__PURE__*/_jsx(DoneIcon,{})})]}),index+1===getValues(\"questions.\".concat(selectedQuestion,\".choices.length\"))&&/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(getValues(\"questions.\".concat(selectedQuestion,\".choices.\").concat(index,\".value\"))){append({id:index+1,value:\"\"});}},sx:{width:\"20px\",background:\"#f6f9fa\",color:\"black\"},children:/*#__PURE__*/_jsx(AddIcon,{})})]});};export default QuestionChoice;","map":{"version":3,"names":["React","Button","Stack","Input","FormControl","AddIcon","RemoveIcon","DoneIcon","useController","QuestionChoice","choice","index","remove","append","selectedQuestion","register","getValues","watch","control","questionFieldName","name","defaultValue","answerField","field","choiceIdField","handleChoiceSelect","choiceId","onChange","gap","flexDirection","width","background","color","required","padding","borderRadius","id","value"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/features/questionsets/components/forms/ChoiceForm.js"],"sourcesContent":["import React from \"react\";\n\nimport { Button, Stack, Input } from \"@mui/material\";\n\nimport FormControl from \"@mui/material/FormControl\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport DoneIcon from \"@mui/icons-material/Done\";\n\nimport { useController } from \"react-hook-form\";\n\nconst QuestionChoice = ({\n  choice,\n  index,\n  remove,\n  append,\n  selectedQuestion,\n  register,\n  getValues,\n  watch,\n  control,\n}) => {\n  const questionFieldName = `questions[${selectedQuestion}]`;\n  const { field: answerField } = useController({\n    name: `${questionFieldName}.answer`,\n    control,\n    defaultValue: \"\",\n  });\n  const { field: choiceIdField } = useController({\n    name: `${questionFieldName}.choices[${index}].id`,\n    control,\n    defaultValue: \"\",\n  });\n\n  const handleChoiceSelect = (selectedQuestion, index, choiceId) => {\n    answerField.onChange(choiceId);\n    choiceIdField.onChange(choiceId);\n  };\n\n  return (\n    <Stack sx={{ gap: \"20px\" }}>\n      <Stack\n        sx={{\n          flexDirection: \"row\",\n          gap: \"10px\",\n          width: \"100% !important\",\n        }}\n      >\n        {/* {index + 1 < getValues(`questions.${selectedQuestion}.choices.length`) ? ( */}\n        <Button\n          onClick={() => {\n            if (getValues(`questions.${selectedQuestion}.choices.length`) > 1) {\n              if (\n                watch(`questions.${selectedQuestion}.answer`) ===\n                watch(`questions.${selectedQuestion}.choices.${index}.id`)\n              ) {\n                answerField.onChange(\"\");\n              }\n              remove(index);\n            }\n          }}\n          sx={{ width: \"20px\", background: \"#f6f9fa\", color: \"black\" }}\n        >\n          <RemoveIcon />\n        </Button>\n\n        <FormControl sx={{ width: \"100%\" }} variant=\"standard\">\n          <Input\n            disableUnderline\n            fullWidth\n            type=\"text\"\n            {...register(\n              `questions[${selectedQuestion}].choices[${index}].value`,\n              {\n                required: \"question choice is required\",\n              }\n            )}\n            variant=\"outlined\"\n            id=\"outlined-basic title\"\n            sx={{\n              background: \"#f6f9fa\",\n              padding: \"8px 16px\",\n              borderRadius: \"5px\",\n            }}\n          />\n        </FormControl>\n\n        <Button\n          onClick={() => {\n            handleChoiceSelect(selectedQuestion, index, choice.id);\n          }}\n          sx={{\n            width: \"20px\",\n            background:\n              watch(`questions.${selectedQuestion}.answer`) ===\n              watch(`questions.${selectedQuestion}.choices.${index}.id`)\n                ? \"#078989\"\n                : \"#f6f9fa\",\n            color:\n              watch(`questions.${selectedQuestion}.answer`) ===\n              watch(`questions.${selectedQuestion}.choices.${index}.id`)\n                ? \"white\"\n                : \"black\",\n            \"&:hover\": {\n              background:\n                watch(`questions.${selectedQuestion}.answer`) ===\n                watch(`questions.${selectedQuestion}.choices.${index}.id`)\n                  ? \"#078989\"\n                  : \"#f6f9fa\",\n            },\n          }}\n        >\n          <DoneIcon />\n        </Button>\n      </Stack>\n      {index + 1 ===\n        getValues(`questions.${selectedQuestion}.choices.length`) && (\n        <Button\n          onClick={() => {\n            if (\n              getValues(`questions.${selectedQuestion}.choices.${index}.value`)\n            ) {\n              append({ id: index + 1, value: \"\" });\n            }\n          }}\n          sx={{ width: \"20px\", background: \"#f6f9fa\", color: \"black\" }}\n        >\n          <AddIcon />\n        </Button>\n      )}\n    </Stack>\n  );\n};\nexport default QuestionChoice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
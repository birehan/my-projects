{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../../../config\";\naxios.defaults.withCredentials = true;\nconst transport = axios.create({\n  withCredentials: true\n});\nexport const getAllUnits = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API_BASE_URL}/api/units`);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const createUnit = async unit => {\n  try {\n    const {\n      data\n    } = await transport.post(`${API_BASE_URL}/api/units`, unit);\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    if ((error === null || error === void 0 ? void 0 : error.message) === \"Network Error\") {\n      throw new Error(error === null || error === void 0 ? void 0 : error.message);\n    }\n    throw new Error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n  }\n};\nexport const updateUnit = async unit => {\n  try {\n    const {\n      data\n    } = await transport.put(`${API_BASE_URL}/api/unit/${unit === null || unit === void 0 ? void 0 : unit.id}`, unit);\n    return data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    if ((error === null || error === void 0 ? void 0 : error.message) === \"Network Error\") {\n      throw new Error(error === null || error === void 0 ? void 0 : error.message);\n    }\n    throw new Error(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n  }\n};\nexport const deleteUnit = async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`${API_BASE_URL}/api/unit/${id}/`);\n    return data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    if ((error === null || error === void 0 ? void 0 : error.message) === \"Network Error\") {\n      throw new Error(error === null || error === void 0 ? void 0 : error.message);\n    }\n    throw new Error(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","defaults","withCredentials","transport","create","getAllUnits","data","get","error","Error","createUnit","unit","post","message","response","updateUnit","put","id","deleteUnit","delete"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/features/units/api/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_BASE_URL } from \"../../../config\";\n\naxios.defaults.withCredentials = true;\n\nconst transport = axios.create({\n  withCredentials: true,\n});\n\nexport const getAllUnits = async () => {\n  try {\n    const { data } = await axios.get(`${API_BASE_URL}/api/units`);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const createUnit = async (unit) => {\n  try {\n    const { data } = await transport.post(`${API_BASE_URL}/api/units`, unit);\n    return data;\n  } catch (error) {\n    if (error?.message === \"Network Error\") {\n      throw new Error(error?.message);\n    }\n    throw new Error(error?.response?.data?.message);\n  }\n};\n\nexport const updateUnit = async (unit) => {\n  try {\n    const { data } = await transport.put(\n      `${API_BASE_URL}/api/unit/${unit?.id}`,\n      unit\n    );\n    return data;\n  } catch (error) {\n    if (error?.message === \"Network Error\") {\n      throw new Error(error?.message);\n    }\n    throw new Error(error?.response?.data?.message);\n  }\n};\n\nexport const deleteUnit = async (id) => {\n  try {\n    const { data } = await axios.delete(`${API_BASE_URL}/api/unit/${id}/`);\n    return data;\n  } catch (error) {\n    if (error?.message === \"Network Error\") {\n      throw new Error(error?.message);\n    }\n    throw new Error(error?.response?.data?.message);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,iBAAiB;AAE9CD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC7BF,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAG,YAAY;EACrC,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,YAAa,YAAW,CAAC;IAC7D,OAAOM,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAM;MAAEL;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACS,IAAI,CAAE,GAAEZ,YAAa,YAAW,EAAEW,IAAI,CAAC;IACxE,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA;IACd,IAAI,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,MAAK,eAAe,EAAE;MACtC,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,CAAC;IACjC;IACA,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEM,QAAQ,4EAAf,gBAAiBR,IAAI,yDAArB,qBAAuBO,OAAO,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOJ,IAAI,IAAK;EACxC,IAAI;IACF,MAAM;MAAEL;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACa,GAAG,CACjC,GAAEhB,YAAa,aAAYW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,EAAG,EAAC,EACtCN,IAAI,CACL;IACD,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA;IACd,IAAI,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,MAAK,eAAe,EAAE;MACtC,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,CAAC;IACjC;IACA,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,2CAALA,KAAK,CAAEM,QAAQ,8EAAf,iBAAiBR,IAAI,0DAArB,sBAAuBO,OAAO,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOD,EAAE,IAAK;EACtC,IAAI;IACF,MAAM;MAAEX;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACoB,MAAM,CAAE,GAAEnB,YAAa,aAAYiB,EAAG,GAAE,CAAC;IACtE,OAAOX,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA;IACd,IAAI,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,MAAK,eAAe,EAAE;MACtC,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,CAAC;IACjC;IACA,MAAM,IAAIJ,KAAK,CAACD,KAAK,aAALA,KAAK,2CAALA,KAAK,CAAEM,QAAQ,8EAAf,iBAAiBR,IAAI,0DAArB,sBAAuBO,OAAO,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
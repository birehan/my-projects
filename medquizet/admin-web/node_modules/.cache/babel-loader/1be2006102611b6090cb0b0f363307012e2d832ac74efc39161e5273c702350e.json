{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/courseActionTypes.js\";\nimport * as api from \"../features/courses/api/index.js\";\nfunction createCourse(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const course = yield call(api.createCourse, payload);\n      yield put({\n        type: types.CREATE_COURSE_SUCCESS,\n        payload: course\n      });\n    } catch (error) {\n      yield put({\n        type: types.CREATE_COURSE_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* getCourses() {\n  try {\n    const courses = yield call(api.getCourses);\n    yield put({\n      type: types.GET_COURSES_SUCCESS,\n      payload: courses\n    });\n  } catch (error) {\n    yield put({\n      type: types.GET_COURSES_FAILED,\n      payload: error\n    });\n  }\n}\nfunction updateCourse(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    try {\n      const course = yield call(api.updateCourse, payload);\n      yield put({\n        type: types.UPDATE_COURSE_SUCCESS,\n        payload: course\n      });\n    } catch (error) {\n      yield put({\n        type: types.UPDATE_COURSE_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction deleteCourse(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    try {\n      const course = yield call(api.deleteCourse, payload);\n      yield put({\n        type: types.DELETE_COURSE_SUCCESS,\n        payload: course\n      });\n    } catch (error) {\n      yield put({\n        type: types.DELETE_COURSE_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* courseSaga() {\n  yield takeEvery(types.GET_COURSES, getCourses);\n  yield takeEvery(types.CREATE_COURSE, createCourse);\n  yield takeEvery(types.UPDATE_COURSE, updateCourse);\n  yield takeEvery(types.DELETE_COURSE, deleteCourse);\n}\nexport default courseSaga;","map":{"version":3,"names":["call","put","takeEvery","types","api","createCourse","payload","course","type","CREATE_COURSE_SUCCESS","error","CREATE_COURSE_FAILED","getCourses","courses","GET_COURSES_SUCCESS","GET_COURSES_FAILED","updateCourse","UPDATE_COURSE_SUCCESS","UPDATE_COURSE_FAILED","deleteCourse","DELETE_COURSE_SUCCESS","DELETE_COURSE_FAILED","courseSaga","GET_COURSES","CREATE_COURSE","UPDATE_COURSE","DELETE_COURSE"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/sagas/courseSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/courseActionTypes.js\";\nimport * as api from \"../features/courses/api/index.js\";\n\nfunction* createCourse({ payload }) {\n  try {\n    const course = yield call(api.createCourse, payload);\n    yield put({ type: types.CREATE_COURSE_SUCCESS, payload: course });\n  } catch (error) {\n    yield put({\n      type: types.CREATE_COURSE_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* getCourses() {\n  try {\n    const courses = yield call(api.getCourses);\n    yield put({ type: types.GET_COURSES_SUCCESS, payload: courses });\n  } catch (error) {\n    yield put({\n      type: types.GET_COURSES_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* updateCourse({ payload }) {\n  try {\n    const course = yield call(api.updateCourse, payload);\n    yield put({ type: types.UPDATE_COURSE_SUCCESS, payload: course });\n  } catch (error) {\n    yield put({ type: types.UPDATE_COURSE_FAILED, payload: error });\n  }\n}\n\nfunction* deleteCourse({ payload }) {\n  try {\n    const course = yield call(api.deleteCourse, payload);\n    yield put({ type: types.DELETE_COURSE_SUCCESS, payload: course });\n  } catch (error) {\n    yield put({ type: types.DELETE_COURSE_FAILED, payload: error });\n  }\n}\n\nfunction* courseSaga() {\n  yield takeEvery(types.GET_COURSES, getCourses);\n  yield takeEvery(types.CREATE_COURSE, createCourse);\n  yield takeEvery(types.UPDATE_COURSE, updateCourse);\n  yield takeEvery(types.DELETE_COURSE, deleteCourse);\n}\n\nexport default courseSaga;\n\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,OAAO,KAAKC,KAAK,MAAM,mCAAmC;AAC1D,OAAO,KAAKC,GAAG,MAAM,kCAAkC;AAEvD,SAAUC,YAAY;EAAA,IAAC;IAAEC;EAAQ,CAAC;EAAA,oBAAE;IAClC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACC,YAAY,EAAEC,OAAO,CAAC;MACpD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACM,qBAAqB;QAAEH,OAAO,EAAEC;MAAO,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QACRO,IAAI,EAAEL,KAAK,CAACQ,oBAAoB;QAChCL,OAAO,EAAEI;MACX,CAAC,CAAC;IACJ;EACF,CAAC;AAAA;AAED,UAAUE,UAAU,GAAG;EACrB,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,GAAG,CAACQ,UAAU,CAAC;IAC1C,MAAMX,GAAG,CAAC;MAAEO,IAAI,EAAEL,KAAK,CAACW,mBAAmB;MAAER,OAAO,EAAEO;IAAQ,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MACRO,IAAI,EAAEL,KAAK,CAACY,kBAAkB;MAC9BT,OAAO,EAAEI;IACX,CAAC,CAAC;EACJ;AACF;AAEA,SAAUM,YAAY;EAAA,IAAC;IAAEV;EAAQ,CAAC;EAAA,oBAAE;IAClC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACY,YAAY,EAAEV,OAAO,CAAC;MACpD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACc,qBAAqB;QAAEX,OAAO,EAAEC;MAAO,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACe,oBAAoB;QAAEZ,OAAO,EAAEI;MAAM,CAAC,CAAC;IACjE;EACF,CAAC;AAAA;AAED,SAAUS,YAAY;EAAA,IAAC;IAAEb;EAAQ,CAAC;EAAA,oBAAE;IAClC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACe,YAAY,EAAEb,OAAO,CAAC;MACpD,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACiB,qBAAqB;QAAEd,OAAO,EAAEC;MAAO,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMT,GAAG,CAAC;QAAEO,IAAI,EAAEL,KAAK,CAACkB,oBAAoB;QAAEf,OAAO,EAAEI;MAAM,CAAC,CAAC;IACjE;EACF,CAAC;AAAA;AAED,UAAUY,UAAU,GAAG;EACrB,MAAMpB,SAAS,CAACC,KAAK,CAACoB,WAAW,EAAEX,UAAU,CAAC;EAC9C,MAAMV,SAAS,CAACC,KAAK,CAACqB,aAAa,EAAEnB,YAAY,CAAC;EAClD,MAAMH,SAAS,CAACC,KAAK,CAACsB,aAAa,EAAET,YAAY,CAAC;EAClD,MAAMd,SAAS,CAACC,KAAK,CAACuB,aAAa,EAAEP,YAAY,CAAC;AACpD;AAEA,eAAeG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
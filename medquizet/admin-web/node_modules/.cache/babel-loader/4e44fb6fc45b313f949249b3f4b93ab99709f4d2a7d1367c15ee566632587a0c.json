{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/actionTypes.js\";\nimport * as api from \"../features/authentication/api/index.js\";\nfunction createUser(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const user = yield call(api.createUser, payload);\n      yield put({\n        type: types.CREATE_USER_SUCCESS,\n        payload: user\n      });\n    } catch (error) {\n      yield put({\n        type: types.CREATE_USER_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* getAllUSers() {\n  try {\n    const users = yield call(api.getUsers);\n    yield put({\n      type: types.FETCH_USERS_SUCCESS,\n      payload: users\n    });\n  } catch (error) {\n    yield put({\n      type: types.FETCH_USERS_FAILED,\n      payload: error\n    });\n  }\n}\nfunction loginUser(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    try {\n      const user = yield call(api.login, payload);\n      yield put({\n        type: types.LOGIN_SUCCESS,\n        payload: user\n      });\n    } catch (error) {\n      yield put({\n        type: types.LOGIN_FAILED,\n        payload: error\n      });\n    }\n  }();\n}\nfunction* logout() {\n  try {\n    yield call(api.logout);\n    yield put({\n      type: types.LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: types.LOGOUT_FAILED,\n      payload: error\n    });\n  }\n}\nfunction updateUser(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    try {\n      const user = yield call(api.updateUser, payload);\n      yield put({\n        type: types.UPDATE_USER_SUCCESS,\n        payload: user\n      });\n    } catch (error) {\n      yield put({\n        type: types.UPDATE_USER_FAILED,\n        message: error\n      });\n    }\n  }();\n}\nfunction updateProfile(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  return function* () {\n    try {\n      const user = yield call(api.updateProfile, payload);\n      yield put({\n        type: types.UPDATE_PROFILE_SUCCESS,\n        payload: user\n      });\n    } catch (error) {\n      yield put({\n        type: types.UPDATE_PROFILE_FAILED,\n        message: error\n      });\n    }\n  }();\n}\nfunction deleteUser(_ref5) {\n  let {\n    payload\n  } = _ref5;\n  return function* () {\n    try {\n      const id = yield call(api.deleteUser, payload);\n      yield put({\n        type: types.DELETE_USER_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      yield put({\n        type: types.DELETE_USER_FAILED,\n        message: error.message\n      });\n    }\n  }();\n}\nfunction* userSaga() {\n  yield takeEvery(types.LOGIN_USER, loginUser);\n  yield takeEvery(types.LOG_OUT, logout);\n  yield takeEvery(types.FETCH_ALL_USER, getAllUSers);\n  yield takeEvery(types.CREATE_USER, createUser);\n  yield takeEvery(types.UPDATE_USER, updateUser);\n  yield takeEvery(types.UPDATE_PROFILE, updateProfile);\n  yield takeEvery(types.DELETE_USER, deleteUser);\n}\nexport default userSaga;","map":{"version":3,"names":["call","put","takeEvery","types","api","createUser","payload","user","type","CREATE_USER_SUCCESS","error","CREATE_USER_FAILED","getAllUSers","users","getUsers","FETCH_USERS_SUCCESS","FETCH_USERS_FAILED","loginUser","login","LOGIN_SUCCESS","LOGIN_FAILED","logout","LOGOUT_SUCCESS","LOGOUT_FAILED","updateUser","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","message","updateProfile","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILED","deleteUser","id","DELETE_USER_SUCCESS","DELETE_USER_FAILED","userSaga","LOGIN_USER","LOG_OUT","FETCH_ALL_USER","CREATE_USER","UPDATE_USER","UPDATE_PROFILE","DELETE_USER"],"sources":["/home/babi/Desktop/Medical-Question-Bank/Medical-Question-Bank-Website/admin/src/sagas/userSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport * as types from \"../constants/actionTypes.js\";\nimport * as api from \"../features/authentication/api/index.js\";\n\nfunction* createUser({ payload }) {\n  try {\n    const user = yield call(api.createUser, payload);\n    yield put({ type: types.CREATE_USER_SUCCESS, payload: user });\n  } catch (error) {\n    yield put({\n      type: types.CREATE_USER_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* getAllUSers() {\n  try {\n    const users = yield call(api.getUsers);\n    yield put({ type: types.FETCH_USERS_SUCCESS, payload: users });\n  } catch (error) {\n    yield put({\n      type: types.FETCH_USERS_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* loginUser({ payload }) {\n  try {\n    const user = yield call(api.login, payload);\n    yield put({ type: types.LOGIN_SUCCESS, payload: user });\n  } catch (error) {\n    yield put({\n      type: types.LOGIN_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    yield call(api.logout);\n    yield put({ type: types.LOGOUT_SUCCESS });\n  } catch (error) {\n    yield put({\n      type: types.LOGOUT_FAILED,\n      payload: error,\n    });\n  }\n}\n\nfunction* updateUser({ payload }) {\n  try {\n    const user = yield call(api.updateUser, payload);\n    yield put({ type: types.UPDATE_USER_SUCCESS, payload: user });\n  } catch (error) {\n    yield put({ type: types.UPDATE_USER_FAILED, message: error });\n  }\n}\nfunction* updateProfile({ payload }) {\n  try {\n    const user = yield call(api.updateProfile, payload);\n    yield put({ type: types.UPDATE_PROFILE_SUCCESS, payload: user });\n  } catch (error) {\n    yield put({ type: types.UPDATE_PROFILE_FAILED, message: error });\n  }\n}\n\nfunction* deleteUser({ payload }) {\n  try {\n    const id = yield call(api.deleteUser, payload);\n    yield put({ type: types.DELETE_USER_SUCCESS, payload: id });\n  } catch (error) {\n    yield put({ type: types.DELETE_USER_FAILED, message: error.message });\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(types.LOGIN_USER, loginUser);\n  yield takeEvery(types.LOG_OUT, logout);\n  yield takeEvery(types.FETCH_ALL_USER, getAllUSers);\n\n  yield takeEvery(types.CREATE_USER, createUser);\n  yield takeEvery(types.UPDATE_USER, updateUser);\n  yield takeEvery(types.UPDATE_PROFILE, updateProfile);\n  yield takeEvery(types.DELETE_USER, deleteUser);\n}\n\nexport default userSaga;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}